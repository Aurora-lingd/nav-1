{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","string","stringify","setItem","sort","compare","prompt","indexOf","push","toUpperCase","a","b","textA","textB","document","key","i","length","toLowerCase","cancelBubble"],"mappings":"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","file":"main.2e6c402b.js","sourceRoot":"../src","sourcesContent":["const $siteList = $('.siteList')\nconst $lastLi = $siteList.find('li.last')\nconst x = localStorage.getItem('x')//获取x\n\nconst xObject = JSON.parse(x)\n\nconst hashMap = xObject || [\n    { logo: 'B', url: 'https://www.bilibili.com' },\n    { logo: 'D', url: 'https://developer.mozilla.org' },\n    { logo: 'G', url: 'https://www.github.com' },\n    { logo: 'I', url: 'https://www.iconfont.cn' },\n    { logo: 'W', url: 'https://wangdoc.com' },\n    { logo: 'Z', url: 'https://www.zhihu.com' },\n]\n\nconst simplifyUrl = (url) => {\n    return url = url.replace('https://', '').replace('http://', '').replace('www.', '').replace(/\\/.*/, '')\n\n}\nconst render = () => {\n\n    $siteList.find('li:not(.last)').remove()\n    hashMap.forEach((node, index) => {\n        const $li = $(`<li>\n            <div class=\"site\">\n                <div class=\"logo\">\n                    ${node.logo}\n                </div>\n                <div class=\"link\">${simplifyUrl(node.url)}</div>\n                <div class=\"close\">\n                <svg class=\"icon\">\n                    <use xlink:href=\"#icon-close\">\n                    </use>\n                </svg>\n                </div>\n            </div>\n        </li>`).insertBefore($lastLi);\n        $li.on('click', () => {\n\n            window.open(node.url)\n        })\n        $li.on('click', '.close', (e) => {\n\n            e.stopPropagation()\n            hashMap.splice(index, 1)\n            render()\n            let string = JSON.stringify(hashMap)\n            localStorage.setItem('x', string)\n        })\n    })\n}\nhashMap.sort(compare)\nrender()\n\n$('.addButton').on('click', () => {\n\n    let url = window.prompt('请问你要添加的网址是什么？')\n    if (url.indexOf('http') !== 0) {\n        url = 'https://' + url\n    }\n\n    hashMap.push({\n        logo: simplifyUrl(url)[0].toUpperCase(),\n        url: url\n    });\n    hashMap.sort(compare)\n    render()\n    let string = JSON.stringify(hashMap)\n    localStorage.setItem('x', string)\n});\n\nconst compare = (a, b) => {\n    let textA = a.logo.toUpperCase();\n    let textB = b.logo.toUpperCase();\n    return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n};\n\n$(document).on('keypress', (e) => {\n\n    const { key } = e\n    for (let i = 0; i < hashMap.length; i++) {\n        if (hashMap[i].logo.toLowerCase() === key) {\n            window.open(hashMap[i].url)\n        }\n\n    }\n\n})\n$('.input').on('keypress', (e) => {\n    const { key } = e\n    for (let i = 0; i < hashMap.length; i++) {\n        if (hashMap[i].logo.toLowerCase() === key) {\n            if (e.stopPropagation) e.stopPropagation();\n            else e.cancelBubble = true;\n\n        }\n    }\n\n})\n"]}